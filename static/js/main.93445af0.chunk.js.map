{"version":3,"sources":["components/header/Header.jsx","components/header/index.jsx","components/form/Input.jsx","components/form/DatePicker.jsx","store/Store.js","store/useStore.jsx","containers/create/CreateVoteContainer.jsx","containers/create/index.jsx","containers/result/VoteResultContainer.jsx","containers/result/index.jsx","containers/votesList/VoteListContainer.jsx","containers/votesList/index.jsx","containers/vote/VoteContainer.jsx","containers/vote/index.jsx","containers/login/LoginContainer.jsx","containers/RootContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["HeaderComponent","styled","div","H2","h2","Header","title","Input","memo","placeholder","value","onChange","range","type","inputRef","rest","name","InputComponent","InputAntd","suffix","isValid","length","minLength","maxLength","options","tooltipTitle","twoToneColor","iconProps","theme","renderToolTip","useCallback","checkValidation","ref","RangePicker","DatePickerAntd","DatePicker","onChangeRangePicker","checkValids","useEffect","disabledDate","current","moment","startOf","start","end","result","i","push","disabledRangeTime","_","disabledHours","splice","disabledMinutes","disabledSeconds","date","locale","disabledTime","showTime","hideDisabledOptions","defaultValue","format","Store","VOTES","callback","this","localStorage","window","getLocalStorage","setLocalStorage","JSON","parse","getItem","item","setItem","stringify","useStore","store","login","callBack","votesData","users","filter","user","loginUser","alert","logout","createUser","isDuplicationUser","slice","userId","getUsers","some","getLoginUser","createVote","vote","voteTitle","voteItems","votePeriod","creator","votes","preVotes","items","map","voter","deleteVote","index","itemIndex","getVotes","parseIndex","parseInt","isNaN","updateVote","voteIndex","selectedIndex","voteIndexNum","selectedIndexNum","getResult","totalVoter","percentage","toFixed","CreateVoteContainer","history","useState","setVoteItems","setTitle","setDate","AllValid","setAllValid","titleRange","useRef","voteItemRange","titleMin","titleMax","itemMin","itemMax","titleLength","isTitleValid","isVoteItemsValid","every","itemLength","onChangeTitle","event","target","onChangeInput","onClickDelete","onClickCreate","onClickAddItem","className","onClick","bordered","dataSource","renderItem","Item","enterButton","onSearch","block","disabled","VoteItem","per","setPer","interval","step","Math","abs","floor","setInterval","clearInterval","SpanGraph","width","span","keyframes","stack","VoteResultContainer","props","id","match","params","key","to","VoteListItem","startVote","onClickEdit","isBetween","style","margin","borderBottom","VoteListContainer","Object","entries","stopPropagation","location","reload","textAlign","marginLeft","VoteContainer","selectedItem","setSelectedItem","includes","onClickVote","isSelected","fontSize","htmlFor","InputGroup","LoginContainer","createId","setCreateId","loginId","setLoginId","focus","onChangeCreateId","onChangeLoginId","onClickCreateUser","isSuccess","onClickLogin","isLogin","onPressEnter","exact","path","component","Container","RootContainer","App","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.93445af0.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = ({ title = '투표' }) => {\r\n  return (\r\n    <HeaderComponent>\r\n      <H2>{title}</H2>\r\n    </HeaderComponent>\r\n  );\r\n};\r\n\r\nconst HeaderComponent = styled.div`\r\n  position: relative;\r\n  background-color: black;\r\n  color: white;\r\n  padding: 10px;\r\n`;\r\n\r\nconst H2 = styled.h2`\r\n  color: white;\r\n`;\r\n\r\nexport default Header;\r\n","import Header from './Header';\r\n\r\nexport default Header;\r\n","import { Icon, Input as InputAntd, Tooltip } from 'antd';\r\nimport React, { memo, useCallback } from 'react';\r\n\r\nconst Input = memo(\r\n  ({\r\n    placeholder = '입력하세요',\r\n    value = '',\r\n    onChange,\r\n    range = [],\r\n    type = '',\r\n    inputRef,\r\n    name = '',\r\n    ...rest\r\n  }) => {\r\n    const InputComponent = InputAntd[type] ? InputAntd[type] : InputAntd;\r\n\r\n    const checkValidation = useCallback(() => {\r\n      const { length = 0 } = value;\r\n      const [minLength = 1, maxLength = 100] = range;\r\n      return length >= minLength && length <= maxLength;\r\n    }, [value, range]);\r\n\r\n    const renderToolTip = isValid => {\r\n      const { length = 0 } = value;\r\n      if (!length || !range.length) {\r\n        return { suffix: <span /> };\r\n      }\r\n\r\n      const [minLength = 1, maxLength = 100] = range;\r\n\r\n      let options = {\r\n        tooltipTitle: `${minLength}~${maxLength}자를 입력하세요.`,\r\n        type: 'warning',\r\n        twoToneColor: '#eb2f96',\r\n      };\r\n\r\n      if (isValid) {\r\n        options = {\r\n          tooltipTitle: '',\r\n          type: 'check-circle',\r\n          twoToneColor: '#52c41a',\r\n        };\r\n      }\r\n\r\n      const { tooltipTitle = '', ...iconProps } = options;\r\n\r\n      return {\r\n        suffix: (\r\n          <Tooltip title={tooltipTitle}>\r\n            <Icon theme=\"twoTone\" {...iconProps} />\r\n          </Tooltip>\r\n        ),\r\n      };\r\n    };\r\n\r\n    const isValid = checkValidation();\r\n    const suffix = renderToolTip(isValid);\r\n\r\n    return (\r\n      <InputComponent\r\n        ref={inputRef}\r\n        onChange={onChange}\r\n        value={value}\r\n        placeholder={placeholder}\r\n        {...rest}\r\n        {...suffix}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default Input;\r\n","import React, { memo, useCallback, useEffect } from 'react';\r\nimport { DatePicker as DatePickerAntd } from 'antd';\r\nimport locale from 'antd/es/date-picker/locale/ko_KR';\r\nimport moment from 'moment';\r\n\r\nconst { RangePicker } = DatePickerAntd;\r\n\r\nconst DatePicker = memo(({ onChangeRangePicker:onChange, checkValids, name }) => {\r\n  useEffect(() => {\r\n    checkValids && checkValids({ name, isValid: false });\r\n  }, [checkValids,name]);\r\n\r\n  const disabledDate = useCallback(current => {\r\n    return current && current < moment().startOf('day');\r\n  }, []);\r\n\r\n  const range = useCallback((start, end) => {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  }, []);\r\n\r\n  const disabledRangeTime = useCallback(\r\n    (_, type) => {\r\n      if (type === 'start') {\r\n        return {\r\n          disabledHours: () => range(0, 60).splice(4, 20),\r\n          disabledMinutes: () => range(30, 60),\r\n          disabledSeconds: () => [55, 56],\r\n        };\r\n      }\r\n      return {\r\n        disabledHours: () => range(0, 60).splice(20, 4),\r\n        disabledMinutes: () => range(0, 31),\r\n        disabledSeconds: () => [55, 56],\r\n      };\r\n    },\r\n    [range]\r\n  );\r\n\r\n  const onChangeRangePicker = (date) => {\r\n    onChange(date);\r\n    checkValids && checkValids({ name, isValid: true });\r\n  };\r\n\r\n  return (\r\n    <RangePicker\r\n      onChange={onChangeRangePicker}\r\n      locale={locale}\r\n      disabledDate={disabledDate}\r\n      disabledTime={disabledRangeTime}\r\n      showTime={{\r\n        hideDisabledOptions: true,\r\n        defaultValue: [\r\n          moment('00:00:00', 'HH:mm:ss'),\r\n          moment('11:59:59', 'HH:mm:ss'),\r\n        ],\r\n      }}\r\n      format=\"YYYY-MM-DD HH:mm:ss\"\r\n    />\r\n  );\r\n});\r\n\r\nexport default DatePicker;\r\n","import { VOTES } from \"./useStore\";\r\n\r\nexport default class Store{\r\n  constructor(name=VOTES, callback) {\r\n    this.localStorage = window.localStorage;\r\n    this.getLocalStorage( name ) || this.setLocalStorage( name, {} );\r\n\r\n    callback && callback();\r\n  }\r\n\r\n  getLocalStorage(name) {\r\n    return JSON.parse( this.localStorage.getItem( name ) )\r\n  }\r\n\r\n  setLocalStorage(name, item) {\r\n    this.localStorage.setItem( name, JSON.stringify( item ) );\r\n  }\r\n};\r\n","import Store from './Store';\r\n\r\nexport const VOTES = 'voteData';\r\n\r\nconst useStore = (name = VOTES) => {\r\n  const store = new Store(name);\r\n\r\n  const login = (name, callBack) => {\r\n    const votesData = store.getLocalStorage(VOTES);\r\n    const { users = [] } = votesData;\r\n    const [user] = users.filter(item => {\r\n      return item.name === name;\r\n    });\r\n\r\n    if (user) {\r\n      store.setLocalStorage(VOTES, {\r\n        ...votesData,\r\n        loginUser: user,\r\n      });\r\n    } else {\r\n      alert('존재하지 않는 아이디 입니다.');\r\n    }\r\n    callBack && callBack(!!user);\r\n  };\r\n\r\n  const logout = callBack => {\r\n    const votesData = store.getLocalStorage(VOTES);\r\n    store.setLocalStorage(VOTES, {\r\n      ...votesData,\r\n      loginUser: {},\r\n    });\r\n    callBack && callBack(true);\r\n  };\r\n\r\n  const createUser = (name, callBack) => {\r\n    if (isDuplicationUser(name)) {\r\n      return alert('중복 아이디가 있습니다.');\r\n    }\r\n\r\n    const votesData = store.getLocalStorage(VOTES);\r\n    const { users = [] } = store.getLocalStorage(VOTES);\r\n    const [lastUser = {}] = users.slice(-1);\r\n    const { userId: lastUserId = 0 } = lastUser;\r\n    const userId = lastUserId + 1;\r\n\r\n    store.setLocalStorage(VOTES, {\r\n      ...votesData,\r\n      users: [\r\n        ...users,\r\n        {\r\n          name,\r\n          userId,\r\n        },\r\n      ],\r\n    });\r\n    callBack && callBack(true);\r\n  };\r\n\r\n  const getUsers = () => {\r\n    const { users = [] } = store.getLocalStorage(VOTES);\r\n    return users;\r\n  };\r\n\r\n  const isDuplicationUser = name => {\r\n    const users = getUsers();\r\n    return users.some(user => {\r\n      return user.name === name;\r\n    });\r\n  };\r\n\r\n  const getLoginUser = () => {\r\n    const { loginUser } = store.getLocalStorage(VOTES);\r\n    return loginUser;\r\n  };\r\n\r\n  const createVote = (vote, callBack) => {\r\n    const votesData = store.getLocalStorage(VOTES);\r\n    const { title: voteTitle, voteItems, date: votePeriod, creator } = vote;\r\n    const { votes: preVotes = [] } = store.getLocalStorage(VOTES);\r\n    const items = voteItems.map(item => {\r\n      return {\r\n        title: item,\r\n        votes: 0,\r\n      };\r\n    });\r\n\r\n    store.setLocalStorage(VOTES, {\r\n      ...votesData,\r\n      votes: [\r\n        ...preVotes,\r\n        {\r\n          creator,\r\n          votePeriod,\r\n          voter: [],\r\n          voteTitle,\r\n          items,\r\n        },\r\n      ],\r\n    });\r\n    callBack && callBack();\r\n  };\r\n\r\n  const deleteVote = (index, callBack) => {\r\n    const votesData = store.getLocalStorage(VOTES);\r\n    const { votes: preVotes } = votesData;\r\n    const votes = preVotes.filter((item, itemIndex) => {\r\n      return itemIndex !== index;\r\n    });\r\n\r\n    store.setLocalStorage(VOTES, { ...votesData, votes });\r\n    callBack && callBack();\r\n  };\r\n\r\n  const getVotes = index => {\r\n    const { votes: preVotes = [] } = store.getLocalStorage(VOTES);\r\n    const parseIndex = parseInt(index);\r\n\r\n    if (!isNaN(parseIndex) && typeof parseIndex === 'number') {\r\n      return preVotes.filter((item, itemIndex) => {\r\n        return itemIndex === parseIndex;\r\n      });\r\n    }\r\n\r\n    return preVotes;\r\n  };\r\n\r\n  const updateVote = (voteIndex, selectedIndex, voter, callBack) => {\r\n    const votesData = store.getLocalStorage(VOTES);\r\n    const voteIndexNum = parseInt(voteIndex);\r\n    const selectedIndexNum = parseInt(selectedIndex);\r\n    const preVotes = getVotes() || [];\r\n    const [vote] = preVotes.slice(voteIndexNum, voteIndexNum + 1);\r\n    const { items: preItems = [] } = vote;\r\n\r\n    const items = preItems.map((item, itemIndex) => {\r\n      if (itemIndex === selectedIndexNum) {\r\n        return {\r\n          ...item,\r\n          votes: item.votes + 1,\r\n        };\r\n      }\r\n      return item;\r\n    });\r\n\r\n    const votes = preVotes.map((vote, index) => {\r\n      if (index === voteIndexNum) {\r\n        return {\r\n          ...vote,\r\n          voter: [...vote.voter, voter],\r\n          items,\r\n        };\r\n      }\r\n      return vote;\r\n    });\r\n\r\n    store.setLocalStorage(VOTES, {\r\n      ...votesData,\r\n      votes,\r\n    });\r\n\r\n    callBack && callBack();\r\n  };\r\n\r\n  const getResult = index => {\r\n    const [vote = {}] = getVotes(index);\r\n    const { voter: { length } = {} } = vote;\r\n    const totalVoter = length;\r\n    const { items: preItems = [] } = vote;\r\n\r\n    const items = preItems.map(item => {\r\n      const percentage = ((item.votes / totalVoter) * 100).toFixed(1);\r\n      return {\r\n        ...item,\r\n        percentage: isNaN(percentage) ? 0 : percentage,\r\n      };\r\n    });\r\n\r\n    return {\r\n      totalVoter,\r\n      items,\r\n    };\r\n  };\r\n\r\n  return {\r\n    login,\r\n    logout,\r\n    createUser,\r\n    getLoginUser,\r\n    getUsers,\r\n    createVote,\r\n    getVotes,\r\n    deleteVote,\r\n    updateVote,\r\n    getResult,\r\n  };\r\n};\r\n\r\nexport default useStore;\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { Button, List } from 'antd';\r\nimport Input from '../../components/form/Input';\r\nimport DatePicker from '../../components/form/DatePicker';\r\nimport useStore from '../../store/useStore';\r\n\r\nconst CreateVoteContainer = ({ history }) => {\r\n  const { createVote } = useStore();\r\n  const [voteItems, setVoteItems] = useState(['', '', '']);\r\n  const [title, setTitle] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [AllValid, setAllValid] = useState([]);\r\n  const titleRange = useRef([2, 20]);\r\n  const voteItemRange = useRef([2, 10]);\r\n  const { getLoginUser } = useStore();\r\n  const user = getLoginUser();\r\n\r\n  useEffect(() => {\r\n    const [titleMin, titleMax] = titleRange.current;\r\n    const [itemMin, itemMax] = voteItemRange.current;\r\n    const { length: titleLength } = title;\r\n\r\n    const isTitleValid = titleMin <= titleLength && titleMax >= titleLength;\r\n\r\n    const isVoteItemsValid = voteItems.every(item => {\r\n      const { length: itemLength } = item;\r\n      return itemMin <= itemLength && itemMax >= itemLength;\r\n    });\r\n\r\n    const isDateValid = !!date;\r\n    setAllValid([isTitleValid, isVoteItemsValid, isDateValid]);\r\n  }, [title, voteItems, date]);\r\n\r\n  const onChangeRangePicker = useCallback(date => {\r\n    setDate(date);\r\n  }, []);\r\n\r\n  const onChangeTitle = useCallback(event => {\r\n    setTitle(event.target.value);\r\n  }, []);\r\n\r\n  const onChangeInput = useCallback(\r\n    index => event => {\r\n      const {\r\n        target: { value },\r\n      } = event;\r\n      setVoteItems(voteItems => {\r\n        return voteItems.map((item, itemIndex) => {\r\n          if (itemIndex === index) {\r\n            return value;\r\n          }\r\n          return item;\r\n        });\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  const onClickDelete = useCallback(\r\n    index => () => {\r\n      setVoteItems(items => {\r\n        if (items.length === 3) {\r\n          alert('최소 항목은 3개입니다!');\r\n          return items;\r\n        }\r\n        return items.filter((item, itemIndex) => itemIndex !== index);\r\n      });\r\n    },\r\n    [AllValid]\r\n  );\r\n\r\n  const onClickCreate = useCallback(() => {\r\n    createVote({ title, voteItems, date, creator: user.name }, () => {\r\n      alert('투표 생성!');\r\n      history.push('/votes');\r\n    });\r\n  }, [title, voteItems, date, createVote, user, history]);\r\n\r\n  const onClickAddItem = useCallback(() => {\r\n    setVoteItems([...voteItems, '']);\r\n  }, [voteItems]);\r\n\r\n  const isDisabledCreateButton = () => {\r\n    return AllValid.some(item => !item);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={'vote_item'}>\r\n        제목\r\n        <Input\r\n          onChange={onChangeTitle}\r\n          value={title}\r\n          placeholder={'2~20자를 입력하세요.'}\r\n          range={titleRange.current}\r\n        />\r\n      </div>\r\n      <div className={'vote_item'}>\r\n        투표항목\r\n        <Button onClick={onClickAddItem} type={'primary'}>\r\n          추가\r\n        </Button>\r\n        <List\r\n          bordered\r\n          dataSource={voteItems}\r\n          renderItem={(item, index) => (\r\n            <List.Item>\r\n              <Input\r\n                type={'Search'}\r\n                value={item}\r\n                placeholder=\"투표항목을 입력하세요. 2~10자\"\r\n                enterButton=\"삭제\"\r\n                onChange={onChangeInput(index)}\r\n                onSearch={onClickDelete(index)}\r\n                range={voteItemRange.current}\r\n              />\r\n            </List.Item>\r\n          )}\r\n        />\r\n      </div>\r\n      <div className={'datePicker vote_item'}>\r\n        기간 <br />\r\n        <DatePicker onChangeRangePicker={onChangeRangePicker} name={'date'} />\r\n      </div>\r\n      <div className={'crate_btn_wrap'}>\r\n        <Button\r\n          type=\"primary\"\r\n          block\r\n          className={'create_btn'}\r\n          onClick={onClickCreate}\r\n          disabled={isDisabledCreateButton()}\r\n        >\r\n          투표생성\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateVoteContainer;\r\n","import CreateVoteContainer from './CreateVoteContainer';\r\nimport './style.css';\r\n\r\nexport default CreateVoteContainer;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport useStore from '../../store/useStore';\r\n\r\nconst VoteResultContainer = props => {\r\n  const { getResult } = useStore();\r\n  const {\r\n    match: {\r\n      params: { id },\r\n    },\r\n    history,\r\n  } = props;\r\n  const { totalVoter, items } = getResult(id);\r\n\r\n  !(totalVoter && items) && history.push('/');\r\n\r\n  return totalVoter && items ? (\r\n    <>\r\n      <div className=\"graph_container\">\r\n        {items.map((item, index) => {\r\n          return (\r\n            <VoteItem item={item} index={index} key={item.title + index} />\r\n          );\r\n        })}\r\n      </div>\r\n      <div>\r\n        <h3>전체투표수 : {`${totalVoter}명`}</h3>\r\n      </div>\r\n      <div className={'first'}>\r\n        <Link to={'/'}>\r\n          <Button type=\"primary\"> 투표목록</Button>\r\n        </Link>\r\n      </div>\r\n    </>\r\n  ) : null;\r\n};\r\n\r\nconst VoteItem = ({ item, index }) => {\r\n  const [per, setPer] = useState(0);\r\n  const interval = useRef(0);\r\n\r\n  useEffect(() => {\r\n    if (!interval.current) {\r\n      const step = Math.abs(Math.floor(2000 / (0 - item.percentage)));\r\n      interval.current = setInterval(() => {\r\n        setPer(per => {\r\n          return per + 1;\r\n        });\r\n      }, step);\r\n    }\r\n\r\n    if (per > item.percentage) {\r\n      clearInterval(interval.current);\r\n      setPer(item.percentage);\r\n    }\r\n  }, [per, item.percentage]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearInterval(interval.current);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"result_title\">\r\n        <h3>\r\n          {`${index + 1}. `}\r\n          {item.title}\r\n          {` (${item.votes}표)`}\r\n        </h3>\r\n      </div>\r\n      <div className={'graph'}>\r\n        <SpanGraph width={item.percentage} index={index}>\r\n          {per}%\r\n        </SpanGraph>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst stack = width => {\r\n  return keyframes`\r\n        0% {\r\n        width: 0;\r\n    }\r\n    100% {\r\n        width: ${width}%;\r\n    }\r\n    `;\r\n};\r\n\r\nconst SpanGraph = styled.span`\r\n  display: block;\r\n  height: 40px;\r\n  width: ${({ width }) => width}%;\r\n  line-height: 40px;\r\n  text-align: right;\r\n  background: ${({ index }) => (index % 2 === 0 ? 'LightSkyBlue' : 'pink')};\r\n  border-radius: 10px;\r\n  box-sizing: border-box;\r\n  animation: ${({ width }) => stack(width)} 2s 1;\r\n`;\r\n\r\nexport default VoteResultContainer;\r\n","import VoteResultContainer from './VoteResultContainer';\r\nimport './style.css';\r\n\r\nexport default VoteResultContainer;\r\n","import React, { useEffect } from 'react';\r\nimport { Button } from 'antd';\r\nimport useStore from '../../store/useStore';\r\nimport moment from 'moment';\r\n\r\nconst VoteListContainer = ({ history }) => {\r\n  const { getVotes, getLoginUser, logout, deleteVote } = useStore();\r\n  const votes = getVotes();\r\n  const user = getLoginUser();\r\n\r\n  useEffect(() => {\r\n    if (!user || !Object.entries(user).length) {\r\n      history.push('/login');\r\n    }\r\n  });\r\n\r\n  const onClickDelete = index => event => {\r\n    event.stopPropagation();\r\n    deleteVote(index, () => {\r\n      window.location.reload();\r\n      alert('삭제 되었습니다.');\r\n    });\r\n  };\r\n\r\n  const onClickEdit = index => event => {\r\n    event.stopPropagation();\r\n  };\r\n\r\n  const startVote = index => () => {\r\n    history.push(`/votes/${index}`);\r\n  };\r\n\r\n  const onClickCreateVote = () => {\r\n    history.push(`/create`);\r\n  };\r\n\r\n  const onClickLogout = () => {\r\n    logout(() => {\r\n      history.push(`/`);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: 'right', margin: '10px' }}>\r\n        <Button type=\"primary\" onClick={onClickCreateVote}>\r\n          투표 생성하기\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          style={{ marginLeft: '10px' }}\r\n          onClick={onClickLogout}\r\n        >\r\n          로그아웃\r\n        </Button>\r\n      </div>\r\n      {!votes.length && '투표가 아직 없습니다. 생성하세요.'}\r\n      {user ? (\r\n        <div className=\"contents\">\r\n          {votes.map((vote, index) => {\r\n            return (\r\n              <VoteListItem\r\n                key={vote.creator + index}\r\n                vote={vote}\r\n                startVote={startVote}\r\n                index={index}\r\n                user={user}\r\n                onClickDelete={onClickDelete(index)}\r\n                onClickEdit={onClickEdit(index)}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst VoteListItem = ({\r\n  vote,\r\n  startVote,\r\n  index,\r\n  user,\r\n  onClickDelete,\r\n  onClickEdit,\r\n}) => {\r\n  const start = moment(vote.votePeriod[0]).format('YYYY-MM-DD HH:mm');\r\n  const end = moment(vote.votePeriod[1]).format('YYYY-MM-DD HH:mm');\r\n  const isBetween = moment().isBetween(\r\n    moment(vote.votePeriod[0]),\r\n    moment(vote.votePeriod[1])\r\n  );\r\n\r\n  return (\r\n    <div className=\"item\" onClick={startVote(index)} key={index}>\r\n      <h3 style={{ margin: '5px', borderBottom: '1px solid black' }}>\r\n        {vote.voteTitle}\r\n      </h3>\r\n      <p className={'sub_title'}>* 생성자 : {vote.creator}</p>\r\n      <p className={'sub_title'}>* 투표 기간</p>\r\n      <p>{`${start} ~ ${end}`}</p>\r\n      <p className={'sub_title'}>* 투표 진행 여부</p>\r\n      <p>{isBetween ? '진행중' : ' 투표 기간이 아닙니다.'}</p>\r\n      {vote.creator === user.name && (\r\n        <div className=\"btn_wrap\">\r\n          <Button\r\n            type=\"primary\"\r\n            className={'btn btn_delete'}\r\n            onClick={onClickDelete}\r\n          >\r\n            삭제\r\n          </Button>\r\n          <Button\r\n            type=\"primary\"\r\n            className={'btn btn_edit'}\r\n            onClick={onClickEdit}\r\n          >\r\n            수정\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoteListContainer;\r\n","import VoteListContainer from './VoteListContainer';\r\nimport './style.css';\r\n\r\nexport default VoteListContainer;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { Button } from 'antd';\r\nimport useStore from '../../store/useStore';\r\nimport moment from 'moment';\r\n\r\nconst VoteContainer = ({ match, history }) => {\r\n  const [selectedItem, setSelectedItem] = useState(-1);\r\n  const {\r\n    params: { id },\r\n  } = match;\r\n  const { getVotes, updateVote, getLoginUser } = useStore();\r\n  const [vote] = getVotes(id);\r\n  const user = getLoginUser();\r\n\r\n  !vote && history.push('/');\r\n\r\n  useEffect(() => {\r\n    if (vote) {\r\n      const { name } = user;\r\n      const { voter } = vote;\r\n      if (voter.includes(name)) {\r\n        alert('이미 투표 했습니다.');\r\n        history.push(`/result/${id}`);\r\n      }\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (vote) {\r\n      const isBetween = moment().isBetween(\r\n        moment(vote.votePeriod[0]),\r\n        moment(vote.votePeriod[1])\r\n      );\r\n\r\n      if (!isBetween) {\r\n        alert('투표 기간이 아닙니다.');\r\n        history.push(`/result/${id}`);\r\n      }\r\n    }\r\n  });\r\n\r\n  const onChange = useCallback(\r\n    index => () => {\r\n      setSelectedItem(index);\r\n    },\r\n    []\r\n  );\r\n\r\n  const onClickVote = useCallback(() => {\r\n    updateVote(id, selectedItem, user.name, () =>\r\n      history.push(`/result/${id}`)\r\n    );\r\n  }, [history, id, updateVote, selectedItem, user.name]);\r\n\r\n  const isSelected = selectedItem > -1;\r\n\r\n  return (\r\n    <>\r\n      {vote ? (\r\n        <div className=\"vote_container\">\r\n          <div className=\"vote_title\">\r\n            <h2>{vote.voteTitle}</h2>\r\n          </div>\r\n          <div className=\"vote_List\">\r\n            {vote.items.map((item, index) => {\r\n              return (\r\n                <div className=\"vote_item\" key={index}>\r\n                  <input\r\n                    type=\"radio\"\r\n                    id={index}\r\n                    name=\"vote\"\r\n                    value={item.title}\r\n                    onChange={onChange(index)}\r\n                  />\r\n                  <label style={{ fontSize: '20px' }} htmlFor={index}>\r\n                    {item.title}\r\n                  </label>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          {isSelected && (\r\n            <div>\r\n              <Button type=\"primary\" block onClick={onClickVote}>\r\n                투표\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VoteContainer;\r\n","import VoteContainer from './VoteContainer';\r\nimport './style.css';\r\n\r\nexport default VoteContainer;\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Input from '../../components/form/Input';\r\nimport { Button } from 'antd';\r\nimport useStore from '../../store/useStore';\r\n\r\nconst InputGroup = styled.div`\r\n  text-align: right;\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nconst LoginContainer = ({ history }) => {\r\n  const [createId, setCreateId] = useState('');\r\n  const [loginId, setLoginId] = useState('');\r\n  const { createUser, login, getLoginUser } = useStore();\r\n  const inputRef = useRef(null);\r\n  const user = getLoginUser();\r\n\r\n  useEffect(() => {\r\n    if (user && Object.entries(user).length) {\r\n      history.push('/votes');\r\n    }\r\n  }, [history, user]);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  }, []);\r\n\r\n  const onChangeCreateId = useCallback(event => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setCreateId(value);\r\n  }, []);\r\n\r\n  const onChangeLoginId = useCallback(event => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setLoginId(value);\r\n  }, []);\r\n\r\n  const onClickCreateUser = useCallback(() => {\r\n    createUser(createId, isSuccess => {\r\n      if (isSuccess) {\r\n        alert(`${createId} 아이디 생성!`);\r\n        setCreateId('');\r\n        inputRef.current.focus();\r\n      }\r\n    });\r\n  }, [createId, createUser]);\r\n\r\n  const onClickLogin = useCallback(() => {\r\n    login(loginId, isLogin => {\r\n      if (isLogin) {\r\n        history.push('/votes');\r\n      } else {\r\n        setLoginId('');\r\n      }\r\n    });\r\n  }, [loginId, login, history]);\r\n\r\n  return (\r\n    <>\r\n      <InputGroup>\r\n        <Input\r\n          placeholder={'생성 할 아이디'}\r\n          value={createId}\r\n          onChange={onChangeCreateId}\r\n          onPressEnter={onClickCreateUser}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          block\r\n          onClick={onClickCreateUser}\r\n          disabled={!createId}\r\n        >\r\n          사용자 생성\r\n        </Button>\r\n      </InputGroup>\r\n      <InputGroup>\r\n        <Input\r\n          inputRef={inputRef}\r\n          placeholder={'로그인 아이디'}\r\n          value={loginId}\r\n          onChange={onChangeLoginId}\r\n          onPressEnter={onClickLogin}\r\n        />\r\n        <Button type=\"primary\" block onClick={onClickLogin} disabled={!loginId}>\r\n          로그인\r\n        </Button>\r\n      </InputGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginContainer;\r\n","import React from 'react';\r\nimport Header from '../components/header/index';\r\nimport { BrowserRouter as Router, Redirect, Route, Switch, } from 'react-router-dom';\r\nimport CreateVoteContainer from './create/index';\r\nimport VoteResultContainer from './result/index';\r\nimport VoteListContainer from './votesList/index';\r\nimport VoteContainer from './vote/index';\r\nimport LoginContainer from \"./login/LoginContainer\";\r\nimport styled from \"styled-components\";\r\n\r\nconst RootContainer = () => {\r\n  return (\r\n    <Container>\r\n      <Router>\r\n        <Header/>\r\n        <Route exact path=\"/\">\r\n          <Redirect to=\"/login\"/>\r\n        </Route>\r\n        <Switch>\r\n          <Route path=\"/login\" component={ LoginContainer }/>\r\n          <Route path=\"/votes\" component={ votes }/>\r\n          <Route path=\"/create\" component={ CreateVoteContainer }/>\r\n          <Route path=\"/result/:id\" component={ VoteResultContainer }/>\r\n          <Route>\r\n            <Redirect to=\"/login\"/>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst votes = ({ match }) => {\r\n  return (\r\n    <>\r\n      <Route exact path={ match.path } component={ VoteListContainer }/>\r\n      <Route path={ `${ match.path }/:id` } component={ VoteContainer }/>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Container  = styled.div`\r\n  max-width: 500px;\r\n  height: 100vh;\r\n  margin: 0 auto;\r\n  background-color:white;\r\n`;\r\n\r\nexport default RootContainer;\r\n","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './css/reset.css';\r\nimport RootContainer from './containers/RootContainer';\r\n\r\nfunction App() {\r\n  return <RootContainer />;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}